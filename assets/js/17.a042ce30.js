(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{425:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-aadl的诞生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-aadl的诞生"}},[t._v("#")]),t._v(" 1. AADL的诞生")]),t._v(" "),a("p",[t._v("        UML等ADLs(结构描述语言)不是专门面向嵌入实时系统领域，尚不能解决该领域的时限响应、并发处理等特定需求。2004年，SAE(Society of Automotive Engineers)组织提出了嵌入式实时系统体系结构分析与设计标准AADL(Architecture Analysis and Design Language)。AADL借鉴了UML等多种ADLs的优点，目的是提供一种标准的、足够精确的方式，设计与分析嵌入式实时系统的软件、硬件体系结构及其性能关键属性。")]),t._v(" "),a("h2",{attrs:{id:"_2-aadl简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-aadl简介"}},[t._v("#")]),t._v(" 2. AADL简介")]),t._v(" "),a("p",[t._v("        AADL（Architecture Analysis and Design Language）结构分析与设计语言，是一种面向嵌入式实时系统领域的建模语言，具有语法简单、语义精确、功能强大、可扩展等优点，能够对嵌入式软件的功能和非功能属性进行建模和描述，并且能够在开发早期对系统进行分析与验证。")]),t._v(" "),a("p",[t._v("        作为一种体系结构描述语言，AADL通过描写构件和连接来建立系统的体系结构。一个AADL的描述由对一系列构件的描述组成，通过对这种描述的实例化来建立系统体系结构的模型。")]),t._v(" "),a("h3",{attrs:{id:"_2-1-构件描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-构件描述"}},[t._v("#")]),t._v(" 2.1 构件描述")]),t._v(" "),a("p",[t._v("AADL的构件被定义成两部分："),a("font",{attrs:{color:"red"}},[t._v("类型和实现")]),t._v("，相当于面向对象中的类与对象。一个AADL的构件拥有一个类型以及对应零个、一个或者很多个实现。")],1),t._v(" "),a("ul",[a("li",[t._v("构件的类型：对外部接口的描述(进出端口、属性等)")]),t._v(" "),a("li",[t._v("构件的实现：对内部结构的描述(子结构、其他属性等)")])]),t._v(" "),a("p",[t._v("构件的类型和构件的实现都可以通过扩展定义一个新的类型和实现。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-构件的种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-构件的种类"}},[t._v("#")]),t._v(" 2.2 构件的种类")]),t._v(" "),a("p",[t._v("大体上分为三大类：软件构件、硬件构件和复合构件。每个种类中构件的语义和组合规则都被严格地定义。")]),t._v(" "),a("h4",{attrs:{id:"_2-2-1-软件构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-软件构件"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.2.1 软件构件")])]),t._v(" "),a("p",[t._v("定义了系统体系结构中的应用元素")]),t._v(" "),a("ul",[a("li",[t._v("数据(data)：源文本中的数据类型和静态数据")]),t._v(" "),a("li",[t._v("线程(thread)：并行执行的可调度单元")]),t._v(" "),a("li",[t._v("线程组(thread group)：组织线程的组合单元")]),t._v(" "),a("li",[t._v("进程(process)：受保护的地址空间")]),t._v(" "),a("li",[t._v("子程序(subprogram)：可顺序调用的可执行代码")])]),t._v(" "),a("h4",{attrs:{id:"_2-2-2-硬件构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-硬件构件"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.2.2 硬件构件")])]),t._v(" "),a("p",[t._v("也叫执行平台构件，对硬件元素进行建模")]),t._v(" "),a("ul",[a("li",[t._v("总线(bus)：在执行平台构件之间提供访问的构件")]),t._v(" "),a("li",[t._v("内存(memory)：存储数据和代码的构件")]),t._v(" "),a("li",[t._v("处理器(processor)：执行线程的构件")]),t._v(" "),a("li",[t._v("设备(device)：与外部环境交互并代表外部环境的构件")])]),t._v(" "),a("h4",{attrs:{id:"_2-2-3-复合构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-复合构件"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.2.3 复合构件")])]),t._v(" "),a("p",[t._v("系统(system)：软件、执行平台或系统构件的组合")]),t._v(" "),a("h3",{attrs:{id:"_2-3-特征"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-特征"}},[t._v("#")]),t._v(" 2.3 特征")]),t._v(" "),a("p",[t._v("        构件的特征在构件类型中声明，规定构件类型的交互点，以这样方式，构件类型的所有实现给其他构件提供同样的接口。AADL存在很多种特征：交互的进出端口、接口子程序、子程序参数以及子构件的存取。它们之间通过定义在实现中的连接来完成。")]),t._v(" "),a("h3",{attrs:{id:"_2-4-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-属性"}},[t._v("#")]),t._v(" 2.4 属性")]),t._v(" "),a("p",[t._v("        属性是AADL组成中一个重要的方面，定义了一个构件的内在特性，它除了能够描述AADL实体的不同特性，还能够描述应用在体系结构中的约束条件，进而验证系统的可靠性。例如，属性被用来规定子程序的执行时间，线程的周期，数据或事件端口的等待队列协议等。属性的声明集中在属性集中，有三种声明方式：类型、常量和属性名。一些属性已经定义在AADL标准里，用户可以根据自己的需要定义新的属性。")]),t._v(" "),a("h3",{attrs:{id:"_2-5-附件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-附件"}},[t._v("#")]),t._v(" 2.5 附件")]),t._v(" "),a("p",[t._v("        当定义新的属性不能满足用户需要时，AADL又引入了附件的概念。附件是另一种对描述的元素添加信息的方式，和属性不同，它仅仅能够使用在构件的声明中，并且拥有自己独立的语法规则。附件的使用允许我们扩展AADL的语法规则以用于描述构件的动态行为。")]),t._v(" "),a("h2",{attrs:{id:"_3-osate简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-osate简介"}},[t._v("#")]),t._v(" 3. OSATE简介")]),t._v(" "),a("p",[t._v("        osate（Open Source AADL Tool Environment）开源AADL工具环境，是一款基于Eclipse环境开发的建模平台，是目前AADL模型主要的开源开发工具，服务于AADL模型的嵌入式实时系统的建模与分析。")]),t._v(" "),a("ul",[a("li",[t._v("最新版本："),a("code",[t._v("2.11.0")])]),t._v(" "),a("li",[t._v("下载地址："),a("a",{attrs:{href:"https://osate-build.sei.cmu.edu/download/osate/stable/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("运行环境：JDK、操作系统(Linux、MAC、Windows都可)")]),t._v(" "),a("li",[t._v("官方更多样例："),a("a",{attrs:{href:"https://github.com/osate/examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("git地址"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"_3-1-打开软件自带样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-打开软件自带样例"}},[t._v("#")]),t._v(" 3.1 打开软件自带样例")]),t._v(" "),a("p",[t._v("导航栏"),a("code",[t._v("File->new->other->examples->AADL examples")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-打开本地项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-打开本地项目"}},[t._v("#")]),t._v(" 3.2 打开本地项目")]),t._v(" "),a("p",[t._v("导航栏"),a("code",[t._v("File->Open Projects From File System")])]),t._v(" "),a("h3",{attrs:{id:"_3-3-实例化aadl文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-实例化aadl文件"}},[t._v("#")]),t._v(" 3.3 实例化AADL文件")]),t._v(" "),a("p",[t._v("点击一个aadl文件，然后点击导航栏"),a("code",[t._v("osate->instantiate")])]),t._v(" "),a("h3",{attrs:{id:"_3-4-检查流延迟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-检查流延迟"}},[t._v("#")]),t._v(" 3.4 检查流延迟")]),t._v(" "),a("p",[t._v("对AADL的分析，有很多种，比如检查流延迟，但这些分析只能对实例化的结果进行分析")]),t._v(" "),a("p",[t._v("选择一个实例化结果，然后点击导航栏"),a("code",[t._v("analyses->timing->check flow latency")])]),t._v(" "),a("h3",{attrs:{id:"_3-5-根据aadl文件自动生成可视化的diagram图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-根据aadl文件自动生成可视化的diagram图"}},[t._v("#")]),t._v(" 3.5 根据AADL文件自动生成可视化的Diagram图")]),t._v(" "),a("p",[t._v("右键选择aadl文件，选择Create Diagram")]),t._v(" "),a("p",[t._v("我们对Diagram的修改，会导致aadl文件进行相应的调整")]),t._v(" "),a("h3",{attrs:{id:"_3-6-官方帮助文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-官方帮助文档"}},[t._v("#")]),t._v(" 3.6 官方帮助文档")]),t._v(" "),a("p",[t._v("导航栏"),a("code",[t._v("help->help contents")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/1.png"),alt:"osate help contents"}}),t._v(" "),a("h2",{attrs:{id:"_4-aadl属性-基于osate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-aadl属性-基于osate"}},[t._v("#")]),t._v(" 4. AADL属性(基于osate)")]),t._v(" "),a("h3",{attrs:{id:"_4-1-属性的查看方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-属性的查看方法"}},[t._v("#")]),t._v(" 4.1 属性的查看方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("AADL Property Values视图用于以结构化的方式显示和编辑参数值，这通常比直接导航和操作AADL文本文件更容易。")])]),t._v(" "),a("li",[a("p",[t._v("显示方式："),a("code",[t._v("window->show view->aadl property values")]),t._v("即可打开该视图")])])]),t._v(" "),a("p",[a("strong",[t._v("注")]),t._v("：需要选中一个aadl文件，初始时状态列表为空，当双击任意属性时，会出现该属性参数信息")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/2.png"),alt:"property values view"}}),t._v(" "),a("h3",{attrs:{id:"_4-2-属性值类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-属性值类型"}},[t._v("#")]),t._v(" 4.2 属性值类型")]),t._v(" "),a("p",[t._v("属性值（Property Values）和我们平时代码里的变量类似")]),t._v(" "),a("p",[t._v("属性值有四种类型：")]),t._v(" "),a("ul",[a("li",[t._v("列表(Lists)：列表值可以展开以显示单个列表元素。")]),t._v(" "),a("li",[t._v("文本(Records)：记录值可以展开以显示其字段。")]),t._v(" "),a("li",[t._v("范围(Ranges)：范围值可以扩展以显示最小值、最大值和增量值。")]),t._v(" "),a("li",[t._v("模式(Modes)：可以扩展模式属性值，以显示每个模式的不同值。")])]),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：Sampler_B有两个属性，Programming_Properties属性的Spurce_Text值为Lists类型，Timing_Properties属性的Period值为Records类型")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/3.png"),alt:"property values types example1"}}),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：Received_Prime属性Data_Model的Data_Representation值为Modes类型(待验证)")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/4.png"),alt:"property values types example2"}}),t._v(" "),a("h3",{attrs:{id:"_4-3-属性状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-属性状态"}},[t._v("#")]),t._v(" 4.3 属性状态")]),t._v(" "),a("p",[t._v("属性状态有六种类型：")]),t._v(" "),a("ul",[a("li",[t._v("local：本地属性")]),t._v(" "),a("li",[t._v("local contained：本地包含属性")]),t._v(" "),a("li",[t._v("shared local contained：共享本地包含属性")]),t._v(" "),a("li",[t._v("inherited：继承属性")]),t._v(" "),a("li",[t._v("default：系统默认值")]),t._v(" "),a("li",[t._v("undefined：不明确的属性")])]),t._v(" "),a("h3",{attrs:{id:"_4-4-local属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-local属性"}},[t._v("#")]),t._v(" 4.4 Local属性")]),t._v(" "),a("p",[t._v("local属性是最基本的属性，它直接AADL模型元素的属性子句或大括号中定义")]),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：car的属性mine具有三个local属性Car_Length、Position、Car_Name")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\tdevice car\n\t\tproperties\n\t\t\tmine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Car_Length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.25")]),t._v(" meter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tmine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tmine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Car_Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" US "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Rabbit"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Germany "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Golf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend car"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-5-shared-local-contained属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-shared-local-contained属性"}},[t._v("#")]),t._v(" 4.5 （shared）local contained属性")]),t._v(" "),a("p",[t._v("包含属性是在属性子句中定义的，并使用applies to子句应用于嵌套模型元素。")]),t._v(" "),a("ul",[a("li",[t._v("local contained属性是应用于单个元素。")]),t._v(" "),a("li",[t._v("shared local contained属性应用于同一个子句中的多个元素。")])]),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：local contained")]),t._v(" "),a("p",[t._v("        在下图中，该视图显示了数据端口（功能）GPS_data的属性，Input_Rate是"),a("code",[t._v("local contained")]),t._v("属性，因为它的值是在包含进程类型Blended_Navigation的属性子句中定义的，注意该属性值末尾语法applies to GPS_Data。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/5.png"),alt:"property values status example1"}}),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：shared local contained")]),t._v(" "),a("p",[t._v("        修改上面例子中进程类型Blended_Navigation属性子句中的定义，然后属性"),a("code",[t._v("Input_Rate")]),t._v("在特性"),a("code",[t._v("INS_Data")]),t._v("(and GPS_Data)就是"),a("code",[t._v("shared local contained")]),t._v("的。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/6.png"),alt:"property values status example2"}}),t._v(" "),a("h3",{attrs:{id:"_4-6-inherited属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-inherited属性"}},[t._v("#")]),t._v(" 4.6 Inherited属性")]),t._v(" "),a("p",[t._v("顾名思义，继承，继承父构件的属性")]),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：在下图中，"),a("code",[t._v("Dispatch_Protocol")]),t._v("就是"),a("code",[t._v("inherited")]),t._v("，因为它是定义在"),a("code",[t._v("Prime_Reporter")]),t._v("并由"),a("code",[t._v("Prime_Rreporter_One")]),t._v("扩展。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/7.png"),alt:"property values status example3"}}),t._v(" "),a("h3",{attrs:{id:"_4-7-default属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-default属性"}},[t._v("#")]),t._v(" 4.7 default属性")]),t._v(" "),a("p",[t._v("        default属性表示所选元素的属性值没有在任何模型元素上定义，而是来自属性的默认值声明。具有default的属性通常不会显示在视图中。工具栏按钮Show default property values可用于切换的显示具有default的属性。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/8.png"),alt:"property values status example4"}}),t._v(" "),a("h3",{attrs:{id:"_4-8-undefined属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-undefined属性"}},[t._v("#")]),t._v(" 4.8 undefined属性")]),t._v(" "),a("p",[t._v("        undefined属性表示该属性对于选定的模型元素没有值。这些属性适用于选定的元素，因此它们可能具有选定属性持有者的值。具有undefined的属性通常不会显示在视图中。工具栏按钮Show undefined properties可用于切换的显示具有undefined的属性。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/9.png"),alt:"property values status example5"}}),t._v(" "),a("h3",{attrs:{id:"_4-9-open-property-association操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-open-property-association操作"}},[t._v("#")]),t._v(" 4.9 Open Property Association操作")]),t._v(" "),a("p",[t._v("官方解释：此操作将打开在AADL文本编辑器中提供显示属性值的属性关联")]),t._v(" "),a("p",[t._v("个人理解：找到该属性最早被赋值的地方")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/10.png"),alt:"property values status example6"}}),t._v(" "),a("h2",{attrs:{id:"_5-aadl构件详细介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-aadl构件详细介绍"}},[t._v("#")]),t._v(" 5. AADL构件详细介绍")]),t._v(" "),a("p",[a("font",{attrs:{color:"red"}},[t._v("AADL规则要求软件构件必须通过binding关系映射到执行平台构件")]),t._v("。通过binding定义了代码在哪执行，以及数据和可执行代码在哪存储。例如进程必须在memory内。"),a("font",{attrs:{color:"red"}},[t._v("软件和执行平台构件的集合在分层系统结构建模中可以表示虚拟机层")]),t._v("。")],1),t._v(" "),a("h3",{attrs:{id:"_5-1-bindings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-bindings"}},[t._v("#")]),t._v(" 5.1 Bindings")]),t._v(" "),a("p",[t._v("绑定（bindings）：系统实现内部软件构件到硬件构件的映射(mapping)，具体是指：thread binds to processor; process, data and port bind to memory。")]),t._v(" "),a("h3",{attrs:{id:"_5-2-构件命名规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-构件命名规则"}},[t._v("#")]),t._v(" 5.2 构件命名规则")]),t._v(" "),a("p",[t._v("构件类型和构件实现的名称必须是合法的AADL标识符，不能是AADL备用字（类似于其他语言的关键字）")]),t._v(" "),a("p",[t._v("合法的AADL标识符，以字母和数字组合而成（不能以数字开头，字母和数字之间可以用"),a("code",[t._v("_")]),t._v("分隔）")]),t._v(" "),a("h3",{attrs:{id:"_5-3-构件类型的声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-构件类型的声明"}},[t._v("#")]),t._v(" 5.3 构件类型的声明")]),t._v(" "),a("p",[t._v("以一个声明指定了thread构件的接口为例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("thread "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v("\n\tfeatures\n\tflows\n\tproperties\n")])])]),a("p",[t._v("thread后面紧跟名称，这是构件的定义子句，定义这是一个叫做"),a("code",[t._v("<name>")]),t._v("的thread构件，这个构件具有thread的特性，它的特性是不可见的")]),t._v(" "),a("p",[t._v("extends、features、flows、properties是构件的描述性子句，叫作构件的"),a("strong",[t._v("外部可见特性")]),t._v("，其中：")]),t._v(" "),a("ul",[a("li",[t._v("flows指定了不同的抽象的信息传输通道")]),t._v(" "),a("li",[t._v("extends允许一个构件类型声明拥有另一个构件类型的描述性子句，并且可以进行修改和添加")])]),t._v(" "),a("h3",{attrs:{id:"_5-4-packages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-packages"}},[t._v("#")]),t._v(" 5.4 packages")]),t._v(" "),a("p",[t._v("        AADL软件包将构件声明的集合用它们自己的名称空间组织成单独的单元。具有共同特征的元素可以被分组在一个包中，并使用包的名称进行引用。通过这种为每一组子系统元素提供不同的名称空间，软件包支持针对大型系统的不同子系统的AADL模型的独立开发。")]),t._v(" "),a("p",[a("strong",[t._v("例")]),t._v("：一个进程类型的声明")]),t._v(" "),a("ul",[a("li",[t._v("为speed_control定义了数据输入和输出接口")]),t._v(" "),a("li",[t._v("end语句结束进程说明和软件包说明")]),t._v(" "),a("li",[t._v("包名叫test_package，即aadl文件叫test_package，即一个aadl文件就是一个软件包")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("test_package")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n\tprocess speed_control\n\t\tfeatures\n\t\t\tinput_speed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\toutput_cmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend test_package"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-5-软件构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-软件构件"}},[t._v("#")]),t._v(" 5.5 软件构件")]),t._v(" "),a("h4",{attrs:{id:"_5-5-1-process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-1-process"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.1 process")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("        Process"),a("font",{attrs:{color:"red"}},[t._v("表示受保护的地址空间")]),t._v("，当外部构件访问进程内部元素时受保护，地址空间包括：与进程直接相关的可执行二进制图像(可执行代码和数据)、与进程子构件直接相关的可执行二进制图像、通过外部构件引用的服务子程序(可执行代码)。"),a("font",{attrs:{color:"red"}},[t._v("Process的属性可以说明：memory保护的执行时间、相关的源文件信息、源文件加载时间、调度协议、绑定约束。")])],1),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/11.png"),alt:"process constraint"}}),t._v(" "),a("p",[t._v("表明：")]),t._v(" "),a("ol",[a("li",[a("font",{attrs:{color:"red"}},[t._v("实现才允许有子构件")]),t._v("，且进程子构件只能有data、thread、thread group三种形式。"),a("font",{attrs:{color:"red"}},[t._v("data作为子构件时，有实现则用实现，没实现则用类型")]),t._v("。")],1),t._v(" "),a("li",[t._v("进程类型的特征可以有四种形式")]),t._v(" "),a("li",[t._v("进程实现不允许有子程序调用")])]),t._v(" "),a("ul",[a("li",[t._v("注意")])]),t._v(" "),a("p",[t._v("进程中没有隐式线程，所以我们在进程中至少要创建一个线程，用于主动执行线程内的代码。")]),t._v(" "),a("h4",{attrs:{id:"_5-5-2-thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2-thread"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.2 thread")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("线程表示从源码有序执行的并发可调度的单位。"),a("font",{attrs:{color:"red"}},[t._v("多线程表示并发执行的路径")]),t._v("。线程可以分配多个属性，包括定时(例如最坏执行时间)、"),a("font",{attrs:{color:"red"}},[t._v("分派协议(例如周期性、不定期性)、memory大小、处理器绑定")]),t._v("。")],1),t._v(" "),a("ul",[a("li",[t._v("线程执行")])]),t._v(" "),a("p",[t._v("线程执行的图形状态机表示：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/16.png"),alt:"thread execution"}}),t._v(" "),a("ol",[a("li",[t._v("圆角矩形表示一个或多个"),a("font",{attrs:{color:"red"}},[t._v("执行状态")]),t._v("。椭圆表示非执行状态。有向弧表示转移，其中小圆圈可以表示起始、终结、分叉和连接。")],1),t._v(" "),a("li",[t._v("线程的执行状态："),a("font",{attrs:{color:"red"}},[t._v("Initialize、Compute、Recover的入口点是预先声明的")]),t._v("。")],1),t._v(" "),a("li",[a("code",[t._v("Initialize")]),t._v("和"),a("code",[t._v("Compute")]),t._v("入口点用于正常执行。")]),t._v(" "),a("li",[t._v("线程出错后，源文本可以处理；如果源文本不处理，"),a("font",{attrs:{color:"red"}},[t._v("线程请求恢复")]),t._v("以便下次分派；如果错误是不可恢复的，则线程会以"),a("font",{attrs:{color:"red"}},[t._v("out event data port错误")]),t._v("传送出去")],1)]),t._v(" "),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("p",[t._v("预定义的属性可以对线程每个执行阶段进行详细描述。线程的执行阶段有以下六个：")]),t._v(" "),a("ol",[a("li",[t._v("Initialize：进行应用程序的特定初始化")]),t._v(" "),a("li",[t._v("Activate：在模式切换之间恢复应用程序状态")]),t._v(" "),a("li",[t._v("Compute：表示在每次线程分派时被执行的代码")]),t._v(" "),a("li",[t._v("Recover：线程执行故障恢复动作")]),t._v(" "),a("li",[t._v("Deactivate：在模式切换之间保存应用程序状态")]),t._v(" "),a("li",[t._v("Finalize：因为进程中止或退出时线程被终止")])]),t._v(" "),a("p",[t._v("每个执行阶段都有"),a("code",[t._v("execution time")]),t._v("和"),a("code",[t._v("deadline")])]),t._v(" "),a("p",[t._v("        此外，线程属性还有分派协议"),a("code",[t._v("Dispatch_Protocol")]),t._v("，其可选项有定期的periodic（每隔一个周期线程重新分派）、不定期的aperiodic（事件触发线程的分派）、不定时的sporadic（在最小分派间隔内事件驱动线程的分派）、背景的background（分派后初始化执行直到完成）")]),t._v(" "),a("p",[t._v("例：列出了compute、initialize执行阶段")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\tthread control\n\t\tproperties\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" nominal execution properties\n\t\tCompute_Entrypoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"control_ep"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tCompute_Execution_Time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tCompute_Deadline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tDispatch_Protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Periodic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" initialization execution properties\n\t\tInitialize_Entrypoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init_control"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tInitialize_Execution_Time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tInitialize_Deadline "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/12.png"),alt:"thread constraint"}}),t._v(" "),a("p",[t._v("表明：线程实现的子构件只能是data，可以有子程序调用。")]),t._v(" "),a("ul",[a("li",[t._v("注意")])]),t._v(" "),a("p",[t._v("线程必须被包含在进程或线程组中")]),t._v(" "),a("h4",{attrs:{id:"_5-5-3-thread-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3-thread-group"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.3 thread group")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("线程组是为了逻辑组织线程、数据而出现的构件抽象。为在设计中关注点的分隔提供了基础，为许多线程及其相关数据的引用只需要定义一个引用接口。")]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/13.png"),alt:"thread group constraint"}}),t._v(" "),a("p",[t._v("表明：线程组实现的子构件可以是数据、线程、线程组，不允许有子程序调用")]),t._v(" "),a("ul",[a("li",[t._v("注意")])]),t._v(" "),a("p",[t._v("线程组只能作为进程或者其他线程组的子构件")]),t._v(" "),a("h4",{attrs:{id:"_5-5-4-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-4-data"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.4 Data")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("data表示静态数据和系统中数据类型。data构件的声明常用来表示：")]),t._v(" "),a("ol",[a("li",[t._v("应用程序数据类型（eg：用作端口和参数上的数据类型）")]),t._v(" "),a("li",[t._v("通过data构件实现的声明中的data子构件实现数据类型的子结构")]),t._v(" "),a("li",[t._v("数据实例")])]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/14.png"),alt:"data constraint"}}),t._v(" "),a("p",[t._v("表明：data实现的子构件只能是data(当然没实现的时候可以用类型，有实现的时候必须用实现)，不允许子程序调用")]),t._v(" "),a("h4",{attrs:{id:"_5-5-5-大例子1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-5-大例子1"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.5 大例子1")])]),t._v(" "),a("ul",[a("li",[t._v("前置知识——什么是构件实现的声明")])]),t._v(" "),a("p",[t._v("以一个thread构件实现的声明格式为例：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/15.png"),alt:"component implementation"}}),t._v(" "),a("p",[t._v("其中：implementationidentifier表示该构件实现的标识符，它与typeidentifier即构件类型标识符共同构成该构件实现的名字")]),t._v(" "),a("ul",[a("li",[t._v("例子")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个进程构件类型，其标识符为control_processing\n\tprocess control_processing \n\t\tfeatures\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data port sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\toutput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" out data port command_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control_processing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为control_processing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed_control（该实现标识符是speed_control）的进程构件实现\n\tprocess implementation control_processing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed_control\n\t\tsubcomponents\n\t\t\tcontrol_input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" thread control_in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input_processing_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tcontrol_output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" thread control_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output_processing_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control_processing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为control_in线程构件类型\n\tthread control_in\n\tend control_in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为control_in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input_processing_01线程构件的实现\n\tthread implementation control_in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input_processing_01\n\tend control_in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input_processing_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为control_out线程构件类型\n\tthread control_out\n\tend control_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为control_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output_processing_01线程构件的实现\n\tthread implementation control_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output_processing_01\n\tend control_out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output_processing_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为sensor_data数据构件类型\n\tdata sensor_data\n\tend sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 声明一个名为command_data数据构件类型\n\tdata command_data\n\tend command_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("从上面例子中我们可以看出：")]),t._v(" "),a("ol",[a("li",[t._v("各构件的类型、实现声明的格式。例如后加end")]),t._v(" "),a("li",[t._v("对于某些子条款为空时，可以不写出来")]),t._v(" "),a("li",[t._v("子构件的写法 ("),a("font",{attrs:{color:"red"}},[t._v("前面可以起别名，实现的子构件一般为实现")]),t._v(")")],1)]),t._v(" "),a("h4",{attrs:{id:"_5-5-6-subprogram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-6-subprogram"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.5.6 Subprogram")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("subprogram抽象表示可顺序执行的源文本，是可调用构件，为调用它的构件提供服务功能或数据操作。可以表示：")]),t._v(" "),a("ol",[a("li",[t._v("data操作的一种方法调用")]),t._v(" "),a("li",[t._v("基本程序调用和顺序调用")]),t._v(" "),a("li",[t._v("远程服务/程序调用")])]),t._v(" "),a("p",[t._v("这些调用包括data转移(进或出)的subprogram。参数以feature的形式声明，为一个subprogram提供data转移的接口。")]),t._v(" "),a("ul",[a("li",[t._v("例：data操作的方法调用")])]),t._v(" "),a("p",[t._v("特征scale_acc_data表示对data构件accelerometer_data进行操作的源文本的入口点")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("\tsubprogram scale_data\n\tend scale_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tsubprogram implementation scale_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale_sensor_data\n\tend scale_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale_sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tdata accelerometer_data\n\tfeatures\n\tscale_acc_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("provides")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("subprogram")]),t._v(" access scale_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale_sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend accelerometer_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tprocess sensor_systems\n\tend sensor_systems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tprocess implementation sensor_systems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_processing\n\tsubcomponents\n\tacc_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" data accelerometer_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tscale_it"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" thread process_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend sensor_systems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_processing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\n\tthread process_data\n\tend process_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tthread implementation process_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale\n\tend process_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("p",[t._v("subprogram属性可以对以下方面声明：为子程序的源文本声明、memory需求、memory绑定、与calls有关的特征")]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/17.png"),alt:"subprogram constraints"}}),t._v(" "),a("h3",{attrs:{id:"_5-6-硬件构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-硬件构件"}},[t._v("#")]),t._v(" 5.6 硬件构件")]),t._v(" "),a("h4",{attrs:{id:"_5-6-1-processor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-1-processor"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.6.1 processor")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("processor是负责调度和执行线程的硬件和相关软件的抽象")]),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\tprocessor Intel_Linux\n\t\tproperties\n\t\t\tHardware_Source_Language "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" VHDL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tHardware_Description_Source_Text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intel_vhdl_1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intel_vhdl_2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend Intel_Linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tprocessor implementation Intel_Linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intel_Linux_01\n\t\tsubcomponents\n\t\t\tHSRAM"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" memory RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intel_RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend Intel_Linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intel_Linux_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tmemory RAM\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tmemory implementation RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intel_RAM\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Intel_RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/18.png"),alt:"processor constraints"}}),t._v(" "),a("p",[t._v("表明：不能有子程序调用，其连接只能是总线访问。")]),t._v(" "),a("h4",{attrs:{id:"_5-6-2-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-2-memory"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.6.2 memory")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("        memory表示"),a("font",{attrs:{color:"red"}},[t._v("存储数据和可执行代码的")]),t._v("构件。可以是随机可访问的物理存储(如RAM\\ROM)，也可以是永久存储(如disk、reflective memory)。memory可以在processor内，也可以作为单独的执行平台构件，通过bus与processor连接。")],1),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\tmemory RAM\n\t\tfeatures \n\t\t\tbus01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" requires bus access membus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hsbus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tmemory implementation RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compRAM\n\t\tsubcomponents\n\t\t\tHSRAM01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" memory XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tSRAM01"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" memory XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tmemory XRAM\n\tend XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tmemory implementation XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSRAM\n\tend XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tmemory implementation XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SRAM\n\tend XRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SRAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tbus membus\n\tend membus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tbus implementation membus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hsbus\n\tend membus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hsbus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("p",[t._v("        memory的属性包括：memory访问协议、word size、存储单元的其他重要描述特征、memory访问默认值(Memory_Protocol)是read-write，但是可以改成read only or write only。")]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/19.png"),alt:"memory constraints"}}),t._v(" "),a("ul",[a("li",[t._v("注意")])]),t._v(" "),a("p",[t._v("memory构件只能被包含在memory，processor或者system构件中。此外，一个单独的memory构件必须被包含在processor中或者通过bus连接到一个processor。")]),t._v(" "),a("h4",{attrs:{id:"_5-6-3-bus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-3-bus"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.6.3 bus")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("        bus代表支持物理构件之间交互所要求的物理硬件和关联通信协议。总线的示例是PCI总线、VME总线、CAN总线、以太网和无线网络。总线通常用于连接计算机硬件构件。还能够使用总线构件表示物理资源，如分配给物理构件的电源和计算机硬件构件。")]),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("p",[t._v("一个处理器类型说明和两个总线类型说明。处理器类型说明Intel_Linux包括一个用于总线类型memory_bus的要求的总线访问说明。而总线类型说明memory_bus包括一个用于总线类型network_bus的要求的总线访问。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tbus memory_bus\n\t\tfeatures\n\t\t\tNBA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" requires bus access network_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend memory_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tbus network_bus\n\tend network_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tprocessor Intel_Linux\n\t\tfeatures\n\t\t\tMBA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" requires bus access memory_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend Intel_Linux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("例如，处理器和存储器要求访问总线，以使处理器能够使用存储器，或者能够经由一个USB总线与照相机通信。对总线访问的需求定义于处理器和存储器的类型说明之中，而与总线的连接则是在包括处理器、存储器和总线的系统实现内明确说明的。总线能够与其他总线直接连接，以表示互联网的通信。它是通过总线类型内要求的总线访问特征以及这些总线实例之间的明确的连接说明规定的。")]),t._v(" "),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("ol",[a("li",[t._v("连接 (eg：规定所支持的连接类别的Allowed_Connection_Type)")]),t._v(" "),a("li",[t._v("消息尺寸 (eg：Allowed_Message_Size)")]),t._v(" "),a("li",[t._v("传输时间 (eg：Transmission_Time)")]),t._v(" "),a("li",[t._v("硬件源语言描述 (eg：Hardware_Source_Language)")])]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/20.png"),alt:"bus constraints"}}),t._v(" "),a("ul",[a("li",[t._v("注意")])]),t._v(" "),a("p",[t._v("bus构件只能是system构件的子构件")]),t._v(" "),a("h4",{attrs:{id:"_5-6-4-device"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-4-device"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5.6.4 device")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("        device表示与外部环境交互的"),a("font",{attrs:{color:"red"}},[t._v("实体")]),t._v("。抽象代表诸如传感器和作动器或发动机一类嵌入式软件系统的接口的实体。一个device有复杂的连接方式，如与processor通过bus连接，与软件构件通过logical connections连接。")],1),t._v(" "),a("p",[t._v("一个device可以被看作：")]),t._v(" "),a("ol",[a("li",[t._v("通过端口与应用软件连接的物理构件")]),t._v(" "),a("li",[t._v("应用系统中的一部分，用于执行平台构件和应用系统的交互")]),t._v(" "),a("li",[t._v("被应用系统访问或者控制的环境的一部分")])]),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("p",[t._v("该范例描述了通过总线与处理器speed_processor交互的设备speed_sensor。处理器执行用于speed_sensor的设备驱动。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tdevice speed_sensor\n\t\tfeatures\n\t\t\tBA2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" requires bus access marine_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\traw_rate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend speed_sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tbus marine_bus\n\tend marine_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tbus implementation marine_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("impl\n\tend marine_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("impl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tprocessor speed_processor\n\t\tfeatures\n\t\t\tBA1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" requires bus access marine_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend speed_processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("p",[t._v("device的属性包括了软件和硬件两部分属性。软件属性：源代码文件、源代码语言、代码大小、执行平台绑定属性；硬件属性：硬件描述语言。")]),t._v(" "),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/21.png"),alt:"device constraints"}}),t._v(" "),a("h3",{attrs:{id:"_5-7-复合构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-复合构件"}},[t._v("#")]),t._v(" 5.7 复合构件")]),t._v(" "),a("p",[a("strong",[t._v("系统构件")])]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("system表示软件、硬件和系统构件的复合体。system可以表示复杂系统的系统，也可以表示集成软硬件的专一应用系统（如飞机导航系统、数据库服务器）。")]),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tsystem integrated_control\n\tend integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tsystem implementation integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA\n\t\tsubcomponents\n\t\t\tcontrol_process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_point_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data set_points"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tnavigation_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system core_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\treal_time_processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" processor rt_fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rt_processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ths_memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" memory rt_memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("high_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\thigh_speed_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bus network_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSbus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("约束")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/22.png"),alt:"system constraints"}}),t._v(" "),a("h3",{attrs:{id:"_5-8-抽象构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-抽象构件"}},[t._v("#")]),t._v(" 5.8 抽象构件")]),t._v(" "),a("ul",[a("li",[t._v("介绍")])]),t._v(" "),a("p",[t._v("抽象构件类别是在不选择它们运行时类别的情况下，允许说明构件类型和实现的通用类别。利用这种类别，能够开发：")]),t._v(" "),a("ol",[a("li",[t._v("系统体系结构的概念性组件基视图")]),t._v(" "),a("li",[t._v("通用的组件基参考体系结构")]),t._v(" "),a("li",[t._v("能够示例和适用于一个体系结构（例如，作为一个方面适用的冗余模式）的体系结构模板或模式。")])]),t._v(" "),a("p",[t._v("        如果需要的话，能够将这些通用说明在线程、线程组、进程、系统、数据、子程序、处理器、虚拟处理器、总线、虚拟总线和设备中进行细化。通过为体系结构权衡研究以及分析（例如：全系统延迟分析可以在尚未定义所包括的组件的运行时特性的情况下进行）的表示方法提供替代方案，在开发的早期阶段，这种技术方法是特别有用的。")]),t._v(" "),a("ul",[a("li",[t._v("范例")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tabstract integrated_control\n\tend integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tabstract implementation integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA\n\t\tsubcomponents\n\t\t\tcontrol_process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" process controller"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_point_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" data set_ponits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tnavigation_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" system core_system"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("navigation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\treal_time_processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" processor rt_fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rt_processor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ths_memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" memory rt_memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("high_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\thigh_speed_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bus network_bus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HSbus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\terror_response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" abstract error_manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("real_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tsystem integrated_control_sys\n\t\textends integrated_control\n\tend integrated_control_sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将抽象的组件实现扩展为系统类别的说明\n\tsystem implementation integrated_control_sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA\n\t\textends integrated_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA\n\tend integrated_control_sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("属性")])]),t._v(" "),a("p",[t._v("可用于其他类别的所有属性均适用于抽象构件。但是，当将抽象构件细化为一个非抽象构件时，只有对非抽象类别有效的那些属性是适用的。")]),t._v(" "),a("h2",{attrs:{id:"_6-构件交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-构件交互"}},[t._v("#")]),t._v(" 6. 构件交互")]),t._v(" "),a("p",[t._v("通过连接、调用和绑定来建立各构件之间的关系，定义构件的交互。")]),t._v(" "),a("h3",{attrs:{id:"_6-1-端口和连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-端口和连接"}},[t._v("#")]),t._v(" 6.1 端口和连接")]),t._v(" "),a("p",[t._v("        端口是用于数据、事件或数据和事件两者的输入或输出定向传输的接口。")]),t._v(" "),a("ol",[a("li",[t._v("端口说明")])]),t._v(" "),a("p",[a("code",[t._v("name: <direction> <port type> [data identifier] [{properties}];")])]),t._v(" "),a("p",[t._v("        通过端口的信息流的方向用端口方向备用字：in、out或in out定义。方向in表示构件的输入，方向out表示构件的输出，方向in out表示一个端口既可以用于输入也可以用于输出。")]),t._v(" "),a("p",[t._v("示例：数据端口、事件端口和事件数据端口")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tprocess control\n\t\tfeatures\n\t\t\tspeed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data port raw_speed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Source_Name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RawSpeed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdisable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" event port "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Required_Connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" event data port raw_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setpt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tdata raw_speed\n\tend raw_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\tdata implementation raw_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setpt\n\tend raw_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setpt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("端口连接说明")])]),t._v(" "),a("p",[a("code",[t._v("name: port <source port> <connection symbol> <destination port> [{properties}] [in modes and transitions];")])]),t._v(" "),a("p",[a("code",[t._v("<connection symbol>")]),t._v("可以是→也可以是←→，代表连接可以是单向的也可以是双向的。属性则包括了连接有关的协议属性。输入模式和转换，则是实体将连接与特定模式或模式转换联系起来。换句话说就是指定了模式的话就表示，该连接在指定的模式中是有效的，在另一种模式中是无效的。同理，连接仅在模式转换期间是有效的。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("\tprocess control\n\t\tfeatures\n\t\t\tcommand_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tsensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdisengage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" event port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" PBA控制功能\n\tprocess implementation control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\t\tsubcomponents\n\t\t\tscale_speed_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" thread read_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tspeed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" thread control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tconnections\n\t\t\tDC1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" port sensor_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" scale_speed_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" port scale_speed_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proc_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proc_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" port speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" command_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" port set_speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tEC1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" port disengage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disengage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-2-总线访问和连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-总线访问和连接"}},[t._v("#")]),t._v(" 6.2 总线访问和连接")]),t._v(" "),a("p",[t._v("        嵌入式系统的计算机硬件构件和物理构件，在物理上是经由总线互相连接的。可通过说明一个组件（如处理器或传感器设备）访问某种类型的总线的需求，并通过总线访问连接说明做到这一点。")]),t._v(" "),a("p",[t._v("示例：为油门操纵杆提供总线访问和连接")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\tdevice actuator\n\t\tfeatures\n\t\t\tcmd: in data port;\n\t\t\tBA1: requires bus access Marine.Standard;\n\tend actuator;\n\t-- 响应PBA命令的油门操纵杆\n\tdevice implementation actuator.speed\n\tend actuator.speed;\n\t-- 总线\n\tbus Marine\n\tend Marine;\n\t--\n\tbus implementation Marine.Standard\t\n\tend Marine.Standard;\n\t-- 封闭系统类型\n\tsystem Complete\n\tend Complete;\n\t-- 封闭系统实现(说明分组件实例和它们的连接)\n\tsystem implementation Complete.PBA_speed_control\n\t\tsubcomponents\n\t\t\tthrottle: device actuator.speed;\n\t\t\tStandard_Marine_Bus: bus Marine.Standard;\n\t\tconnections\n\t\t\tBAC1: bus access Standard_Marine_Bus <-> throttle.BA1;\n\tend Complete.PBA_speed_control;\n")])])]),a("h2",{attrs:{id:"_7-系统流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-系统流"}},[t._v("#")]),t._v(" 7. 系统流")]),t._v(" "),a("p",[t._v("        流允许对整个体系结构的逻辑路径进行表述和分析。在流的支持下，能够说明构件的流规范。流规范定义了从构件输入到构件输出的逻辑流。")]),t._v(" "),a("h3",{attrs:{id:"_7-1-流规范的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-流规范的说明"}},[t._v("#")]),t._v(" 7.1 流规范的说明")]),t._v(" "),a("p",[t._v("流规范说明包括在构件类型说明的"),a("font",{attrs:{color:"red"}},[t._v("flows")]),t._v("部分之中，并在流中确定组件的角色。")],1),t._v(" "),a("p",[t._v("三个流规范的模板：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/23.png"),alt:"flows standard"}}),t._v(" "),a("ol",[a("li",[t._v("流源：定义构件中一个流的起源，借助流出特征从构件中流出")]),t._v(" "),a("li",[t._v("流汇：定义构件中一个流的终止，借助流入特征流入构件")]),t._v(" "),a("li",[t._v("流路径：定义借助流入特征流入构件和借助流出特征从构件中流出的一个流")])]),t._v(" "),a("h3",{attrs:{id:"_7-2-端对端流说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-端对端流说明"}},[t._v("#")]),t._v(" 7.2 端对端流说明")]),t._v(" "),a("p",[t._v("端对端流详述了从一个构件开始到另一个构件结束的一个路径。")]),t._v(" "),a("p",[t._v("端对端流说明：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/24.png"),alt:"port to port declaration"}}),t._v(" "),a("h2",{attrs:{id:"_8-模型开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-模型开发"}},[t._v("#")]),t._v(" 8. 模型开发")]),t._v(" "),a("p",[t._v("建立一个一维速度控制系统模型，进行调度分析。速度控制功能是汽艇自动驾驶仪(PBA)系统的一部分。")]),t._v(" "),a("h3",{attrs:{id:"_8-1-模型构件的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-模型构件的定义"}},[t._v("#")]),t._v(" 8.1 模型构件的定义")]),t._v(" "),a("p",[t._v("        审查PBA速度控制装置，定义一个简化的速度控制模型。在该模型中，需要用到一个用于输入PBA相关信息的驾驶员接口单元、一个用于为PBA传送速度数据的速度传感器，以及一个用于响应PBA命令的油门操纵杆。由于我们最开始开发的是一个概念模型，因此我们将组件类别限制为系统、进程和设备。")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\tdevice sensor\n\t\tfeatures\n\t\t\tsensor_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 用于为PBA传送速度数据的速度传感器\n\tdevice implementation sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\tend sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tdevice interface\n\t\tfeatures\n\t\t\tset_speed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdisengage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out event port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 输入PBA相关信息的驾驶员接口单元\n\tdevice implementation interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pilot\n\tend interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pilot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tprocess control\n\t\tfeatures\n\t\t\tcommand_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tsensor_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_speed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdisengage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in event port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" PBA控制功能\n\tprocess implementation control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tdevice actuator\n\t\tfeatures\n\t\t\tcmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend actuator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 响应PBA命令的油门操纵杆\n\tdevice implementation actuator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\tend actuator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("将速度传感器、驾驶员接口和油门操纵杆建模为设备，并将PBA控制功能表示为一个进程。不进行深入的分解。")]),t._v(" "),a("h3",{attrs:{id:"_8-2-顶层模型的开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-顶层模型的开发"}},[t._v("#")]),t._v(" 8.2 顶层模型的开发")]),t._v(" "),a("p",[t._v("将各个构件的模型的实现集成到一个系统中")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 封闭系统类型\n\tsystem Complete\n\tend Complete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 封闭系统实现"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("说明分组件实例和它们的连接"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tsystem implementation Complete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA_speed_control\n\t\tsubcomponents\n\t\t\tspeed_sensor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" device sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tthrottle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" device actuator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tspeed_control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" process control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tinterface_unit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" device interface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pilot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tconnections\n\t\t\tDC1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port speed_sensor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("command_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" throttle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port interface_unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tEC4"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port interface_unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disengage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disengage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend Complete"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PBA_speed_control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("        在系统实现中，说明了四种分组件。三种分组件代表速度传感器、油门杆和驾驶员接口单元，进程分组件speed_control代表为PBA提供速度控制的软件。同时，为各分组件的每个端口定义了连接。")]),t._v(" "),a("h3",{attrs:{id:"_8-3-控制软件的细节描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-控制软件的细节描述"}},[t._v("#")]),t._v(" 8.3 控制软件的细节描述")]),t._v(" "),a("p",[t._v("        对进程speed_control进行详细构建，将速度控制功能交由两个分构件实现，第一个分构件是接收速度传感器的输入、确定数据的比例和对数据滤波，并向第二个线程发送处理数据的线程。第二个分构件是执行PBA速度控制规则，并将命令送给油门杆的线程。")]),t._v(" "),a("p",[t._v("由于两个线程的接口是不同的，故而为每种线程定义了类型和实现。每个线程均为周期为50ms的周期性线程。")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" PBA控制线程的说明\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 线程一：接收速度传感器的输入，向第二个线程发送处理后的数据\n\tthread read_data\n\t\tfeatures \n\t\t\tsensor_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tproc_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tproperties\n\t\t\tDispatch_Protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Periodic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tPeriod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend read_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tthread implementation read_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\tend read_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 线程二：执行PBA速度控制规则，并将命令送给油门操纵杆的线程\t\n\tthread control_laws\n\t\tfeatures\n\t\t\tproc_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tcmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" out data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdisengage"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in event port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tset_speed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" in data port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tproperties\n\t\t\tDispatch_Protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Periodic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tPeriod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tthread implementation control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\tend control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("向进程实现control.speed添加这两个线程，以及描述它们的交互(connection)。")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" PBA控制功能\n\tprocess implementation control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed\n\t\tsubcomponents\n\t\t\tscale_speed_data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" thread read_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tspeed_control_laws"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" thread control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tconnections\n\t\t\tDC1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port sensor_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" scale_speed_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sensor_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port scale_speed_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proc_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proc_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" command_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tDC4"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port set_speed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tEC1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" port disengage "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" speed_control_laws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disengage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-4-添加硬件构件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-添加硬件构件"}},[t._v("#")]),t._v(" 8.4 添加硬件构件")]),t._v(" "),a("p",[t._v("        此刻，我们已经定义了速度控制系统的软件构件，现在该定义支持软件所要求的执行硬件：处理器、存储器和总线。处理器将执行PBA控制代码 (线程)，而存储器将存储系统的可执行代码 (进程)，总线则为系统提供物理路径。")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 执行平台说明\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 声明处理器类型，用于执行PBA的控制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("线程"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tprocessor Real_Time\n\t\tfeatures\n\t\t\tBA1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" requires bus access Marine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend Real_Time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" \n\tprocessor implementation Real_Time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_GHz\n\tend Real_Time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("one_GHz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 声明存储器类型，用于存储系统的可执行代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("进程"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tmemory RAM\n\t\tfeatures\n\t\t\tBA1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" requires bus access Marine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tmemory implementation RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard\n\tend RAM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 总线\n\tbus Marine\n\tend Marine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\tbus implementation Marine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard\t\n\tend Marine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Standard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在代码中，处理器Real_Time和存储器RAM均声明了对总线实现Marine.Standard的访问。")]),t._v(" "),a("h3",{attrs:{id:"_8-5-物理连接的说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-物理连接的说明"}},[t._v("#")]),t._v(" 8.5 物理连接的说明")]),t._v(" "),a("p",[t._v("在上一节中，我们定义了执行硬件，在这一节中，我们要将这些硬件集成到我们的系统中，同时将所有硬件构件与总线连接起来。")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\tsystem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("implementation Complete.PBA_speed_control")]),t._v("\n\t\tsubcomponents\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tspeed_sensor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("device sensor.speed;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tthrottle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("device actuator.speed;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tspeed_control")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("process control.speed;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tinterface_unit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("device interface.pilot;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tRT_1GHz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("processor Real_Time.one_GHz;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tStandard_Marine_Bus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus Marine.Standard;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tStand_Memory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("memory RAM.Standard;")]),t._v("\n\t\tconnections\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tDC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("port speed_sensor.sensor_data -> speed_control.sensor_data;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tDC2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("port speed_control.command_data -> throttle.cmd;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tDC3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("port interface_unit.set_speed -> speed_control.set_speed;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tEC4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("port interface_unit.disengage -> speed_control.disengage;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tBAC1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus access Standard_Marine_Bus <-> speed_sensor.BA1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tBAC2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus access Standard_Marine_Bus <-> RT_1GHz.BA1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tBAC3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus access Standard_Marine_Bus <-> throttle.BA1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tBAC4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus access Standard_Marine_Bus <-> interface_unit.BA1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tBAC5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("bus access Standard_Marine_Bus <-> Stand_Memory.BA1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\tend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("Complete.PBA_speed_control;")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-6-软件对硬件的绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-软件对硬件的绑定"}},[t._v("#")]),t._v(" 8.6 软件对硬件的绑定")]),t._v(" "),a("p",[t._v("        在系统构件的实现中使用属性关联，将软件构件绑定到相应的物理构件上。前两个说明表示将线程speed_control_laws和线程scale_speed_data绑定到处理器RT_1GHz。最后一个说明表示将进程speed_control中代码和数据绑定到存储器构件Standard_Memory。")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[t._v("\t\tproperties\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tAllowed_Processor_Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> (reference(RT_1GHz)) applies to speed_control.speed_control_laws;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tAllowed_Processor_Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> (reference(RT_1GHz)) applies to speed_control.scale_speed_data;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tActual_Memory_Binding")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> (reference(Stand_Memory)) applies to speed_control;")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-7-绑定和调度分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-7-绑定和调度分析"}},[t._v("#")]),t._v(" 8.7 绑定和调度分析")]),t._v(" "),a("p",[t._v("        只要定义了线程，并且建立了它对处理器的绑定，就可以开始评估处理器的负载，并分析系统的可调度性。在进行调度分析之前，需要定义线程的必要执行特性。给线程read_data分配执行时间范围1~2ms，给线程control_laws分配执行时间范围3~5ms。这些执行时间估值可以来自类似系统的原型代码或历史数据的时序测量结果为基础。")]),t._v(" "),a("div",{staticClass:"language-properties extra-class"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("线程一：接收速度传感器的输入，向第二个线程发送处理后的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\tthread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("read_data")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\tfeatures")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tsensor_data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("in data port;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tproc_data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("out data port;")]),t._v("\n\t\tproperties\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tDispatch_Protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> Periodic;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tCompute_Execution_Time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> 1 ms .. 2 ms;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\tPeriod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> 50 ms;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\tend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("read_data;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t--")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("线程二：执行PBA速度控制规则，并将命令送给油门操纵杆的线程\t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\tthread")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("control_laws")]),t._v("\n\t\t\tfeatures\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tproc_data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("in data port;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tcmd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("out data port;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tdisengage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("in event port;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tset_speed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("in data port;")]),t._v("\n\t\t\tproperties\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tDispatch_Protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> Periodic;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tCompute_Execution_Time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> 3 ms .. 5 ms;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\t\t\tPeriod")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("> 50 ms;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("\t\tend")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("control_laws;")]),t._v("\n")])])]),a("p",[t._v("此刻，我们已经定义了一个用以描述实用配置的、包括所有构件、属性和绑定的简单速度控制系统的说明性模型。根据该说明性模型的顶层系统实现，建立系统的实例模型，利用osate调度分析插件分析该模型。分析结果如下：")]),t._v(" "),a("p",[t._v("系统中两个线程只使用了14%的处理器能力。两个线程的最长执行时间是7ms，它是其50ms执行周期的14%：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/25.png"),alt:"declaration"}}),t._v(" "),a("p",[t._v("由插接提供的有关线程实际绑定信息：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/tool/aadl/26.png"),alt:"declaration"}}),t._v(" "),a("h2",{attrs:{id:"_9-osate模型分析功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-osate模型分析功能"}},[t._v("#")]),t._v(" 9. OSATE模型分析功能")]),t._v(" "),a("h3",{attrs:{id:"_9-1-流延迟分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-流延迟分析"}},[t._v("#")]),t._v(" 9.1 流延迟分析")]),t._v(" "),a("p",[t._v("查看端对端延迟要求是否得到满足。该工具跟踪该通路以及流的各独立要素得到的总延迟与为一个端到端的预计的延迟进行比较，生成分析报告。AADL的重要能力之一就是能够建模和分析整个系统的流路径，osate工具很好的支持了这一能力。")]),t._v(" "),a("h3",{attrs:{id:"_9-2-总线负载分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-总线负载分析"}},[t._v("#")]),t._v(" 9.2 总线负载分析")]),t._v(" "),a("p",[t._v("查看系统中绑定到总线的连接和虚拟总线，并检查总线是否具有承载必要数据的能力。")]),t._v(" "),a("h3",{attrs:{id:"_9-3-调度分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-调度分析"}},[t._v("#")]),t._v(" 9.3 调度分析")]),t._v(" "),a("ol",[a("li",[t._v("绑定和调度线程：一种装箱资源分配工具，确保满足可调度性和绑定。")]),t._v(" "),a("li",[t._v("调度绑定的线程：绑定到处理器的周期性线程的速率单调分析。")]),t._v(" "),a("li",[t._v("检查速率单调优先级分配：对于具有分配优先级的周期性线程，确保分配的优先级符合RMA规则。")])]),t._v(" "),a("h3",{attrs:{id:"_9-4-检查绑定的约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-检查绑定的约束"}},[t._v("#")]),t._v(" 9.4 检查绑定的约束")]),t._v(" "),a("p",[t._v("检查模型是否符合绑定属性中指定的各种约束")]),t._v(" "),a("h3",{attrs:{id:"_9-5-模型维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-模型维护"}},[t._v("#")]),t._v(" 9.5 模型维护")]),t._v(" "),a("ol",[a("li",[t._v("查找未使用的分类符：查找未使用的构件")]),t._v(" "),a("li",[t._v("模型统计：返回有关系统的基本统计信息，如构件的数量、端到端的流、连接等")])]),t._v(" "),a("h3",{attrs:{id:"_9-6-其他分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-其他分析"}},[t._v("#")]),t._v(" 9.6 其他分析")]),t._v(" "),a("p",[t._v("osate还提供了一组插件用于验证模型或将其与其他工具连接。用户可以开发自己的插件，将AADL模型与其他工具连接起来。")])])}),[],!1,null,null,null);a.default=n.exports}}]);